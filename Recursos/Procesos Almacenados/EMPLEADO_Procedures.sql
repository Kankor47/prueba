--region Drop Existing Procedures

IF OBJECT_ID('dbo.trx_Insert_Empleado') IS NOT NULL
	DROP PROCEDURE [dbo].[trx_Insert_Empleado]

IF OBJECT_ID('dbo.trx_Update_Empleado') IS NOT NULL
	DROP PROCEDURE [dbo].[trx_Update_Empleado]

IF OBJECT_ID('dbo.trx_Save_Empleado') IS NOT NULL
	DROP PROCEDURE [dbo].[trx_Save_Empleado]

IF OBJECT_ID('dbo.trx_Remove_Empleado') IS NOT NULL
	DROP PROCEDURE [dbo].[trx_Remove_Empleado]

IF OBJECT_ID('dbo.trx_Get_Empleado') IS NOT NULL
	DROP PROCEDURE [dbo].[trx_Get_Empleado]

IF OBJECT_ID('dbo.trx_Get_EmpleadosAll') IS NOT NULL
	DROP PROCEDURE [dbo].[trx_Get_EmpleadosAll]

--endregion

GO

--region [dbo].[trx_Insert_Empleado]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Kankor using CodeSmith 6.0.0.0
-- Template:       StoredProcedures-SqlServer.cst
-- Procedure Name: [dbo].[trx_Insert_Empleado]
-- Date Generated: martes, 9 de enero de 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[trx_Insert_Empleado]
	@CEDULA_EMP varchar(13),
	@ID_AREA numeric(15, 0),
	@CARGO_US varchar(150),
	@PASWORD_US varchar(26)
AS
DECLARE @error_number	int,
        @error_proc		nvarchar(126),
        @error_message	nvarchar(2048) 
BEGIN TRY

    BEGIN   TRANSACTION
    
    INSERT  INTO [dbo].[EMPLEADO] (
    	    [CEDULA_EMP],
			[ID_AREA],
			[CARGO_US],
			[PASWORD_US] ) 
    VALUES  (
    	    @CEDULA_EMP,
			@ID_AREA,
			@CARGO_US,
			@PASWORD_US )
    
    COMMIT  TRANSACTION

END TRY
BEGIN CATCH
	SELECT	@error_number = ERROR_NUMBER(),
			@error_proc = ERROR_PROCEDURE(),
			@error_message = ERROR_MESSAGE() 
	RAISERROR( '%s. Error: ( %d ) en %s', 16, 1, @error_message, @error_number,  @error_proc )
	IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
END CATCH
--endregion

GO

--region [dbo].[trx_Update_Empleado]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Kankor using CodeSmith 6.0.0.0
-- Template:       StoredProcedures-SqlServer.cst
-- Procedure Name: [dbo].[trx_Update_Empleado]
-- Date Generated: martes, 9 de enero de 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[trx_Update_Empleado]
	@CEDULA_EMP varchar(13),
	@ID_AREA numeric(15, 0),
	@CARGO_US varchar(150),
	@PASWORD_US varchar(26)
AS
DECLARE @error_number	int,
        @error_proc		nvarchar(126),
        @error_message	nvarchar(2048) 
BEGIN TRY

    BEGIN   TRANSACTION
    UPDATE  [dbo].[EMPLEADO] 
    SET     [ID_AREA] = @ID_AREA,
			[CARGO_US] = @CARGO_US,
			[PASWORD_US] = @PASWORD_US
    WHERE   [CEDULA_EMP] = @CEDULA_EMP
    COMMIT  TRANSACTION
    
END TRY
BEGIN CATCH
	SELECT	@error_number = ERROR_NUMBER(),
			@error_proc = ERROR_PROCEDURE(),
			@error_message = ERROR_MESSAGE() 
	RAISERROR( '%s. Error: ( %d ) en %s', 16, 1, @error_message, @error_number,  @error_proc )
	IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
END CATCH
--endregion

GO


--region [dbo].[trx_Save_Empleado]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Kankor using CodeSmith 6.0.0.0
-- Template:       StoredProcedures-SqlServer.cst
-- Procedure Name: [dbo].[trx_Save_Empleado]
-- Date Generated: martes, 9 de enero de 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[trx_Save_Empleado]
	@CEDULA_EMP varchar(13),
	@ID_AREA numeric(15, 0),
	@CARGO_US varchar(150),
	@PASWORD_US varchar(26)
AS
DECLARE @error_number	int,
        @error_proc		nvarchar(126),
        @error_message	nvarchar(2048) 
BEGIN TRY

    BEGIN TRANSACTION
    
    IF ISNULL( @CEDULA_EMP, '') <> '' BEGIN 
        UPDATE  [dbo].[EMPLEADO] 
        SET     [ID_AREA] = @ID_AREA,
				[CARGO_US] = @CARGO_US,
				[PASWORD_US] = @PASWORD_US
    	WHERE   [CEDULA_EMP] = @CEDULA_EMP
    END
                
    ELSE BEGIN
        INSERT  INTO [dbo].[EMPLEADO] (
        	    [CEDULA_EMP],
				[ID_AREA],
				[CARGO_US],
				[PASWORD_US] ) 
        VALUES  (
        	    @CEDULA_EMP,
				@ID_AREA,
				@CARGO_US,
				@PASWORD_US )
    END

    COMMIT TRANSACTION
    
    SELECT  CEDULA_EMP = @CEDULA_EMP

END TRY
BEGIN CATCH
	SELECT	@error_number = ERROR_NUMBER(),
			@error_proc = ERROR_PROCEDURE(),
			@error_message = ERROR_MESSAGE() 
	RAISERROR( '%s. Error: ( %d ) en %s', 16, 1, @error_message, @error_number,  @error_proc )
	IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
END CATCH
--endregion

GO


--region [dbo].[trx_Remove_Empleado]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Kankor using CodeSmith 6.0.0.0
-- Template:       StoredProcedures-SqlServer.cst
-- Procedure Name: [dbo].[trx_Remove_Empleado]
-- Date Generated: martes, 9 de enero de 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[trx_Remove_Empleado]
	@CEDULA_EMP varchar(13)
AS
DECLARE @error_number	int,
        @error_proc		nvarchar(126),
        @error_message	nvarchar(2048) 
BEGIN TRY

    BEGIN   TRANSACTION
    DELETE  FROM [dbo].[EMPLEADO]
    WHERE   [CEDULA_EMP] = @CEDULA_EMP
    COMMIT  TRANSACTION
    
END TRY
BEGIN CATCH
	SELECT	@error_number = ERROR_NUMBER(),
			@error_proc = ERROR_PROCEDURE(),
			@error_message = ERROR_MESSAGE() 
	RAISERROR( '%s. Error: ( %d ) en %s', 16, 1, @error_message, @error_number,  @error_proc )
	IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
END CATCH
--endregion

GO

--region [dbo].[trx_Get_Empleado]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Kankor using CodeSmith 6.0.0.0
-- Template:       StoredProcedures-SqlServer.cst
-- Procedure Name: [dbo].[trx_Get_Empleado]
-- Date Generated: martes, 9 de enero de 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[trx_Get_Empleado]
	@CEDULA_EMP varchar(13)
AS
DECLARE @error_number	int,
        @error_proc		nvarchar(126),
        @error_message	nvarchar(2048) 
BEGIN TRY

	SET TRANSACTION ISOLATION LEVEL READ COMMITTED

    SELECT  [CEDULA_EMP],
			[ID_AREA],
			[CARGO_US],
			[PASWORD_US]
    FROM    [dbo].[EMPLEADO]
    WHERE   [CEDULA_EMP] = @CEDULA_EMP

END TRY
BEGIN CATCH
	SELECT	@error_number = ERROR_NUMBER(),
			@error_proc = ERROR_PROCEDURE(),
			@error_message = ERROR_MESSAGE() 
	RAISERROR( '%s. Error: ( %d ) en %s', 16, 1, @error_message, @error_number,  @error_proc )
	IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
END CATCH
--endregion

GO

--region [dbo].[trx_Get_EmpleadosAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Kankor using CodeSmith 6.0.0.0
-- Template:       StoredProcedures-SqlServer.cst
-- Procedure Name: [dbo].[trx_Get_EmpleadosAll]
-- Date Generated: martes, 9 de enero de 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[trx_Get_EmpleadosAll]
AS
DECLARE @error_number	int,
        @error_proc		nvarchar(126),
        @error_message	nvarchar(2048) 
BEGIN TRY

	SET TRANSACTION ISOLATION LEVEL READ COMMITTED

    SELECT  [CEDULA_EMP],
			[ID_AREA],
			[CARGO_US],
			[PASWORD_US]
    FROM    [dbo].[EMPLEADO]

END TRY
BEGIN CATCH
	SELECT	@error_number = ERROR_NUMBER(),
			@error_proc = ERROR_PROCEDURE(),
			@error_message = ERROR_MESSAGE() 
	RAISERROR( '%s. Error: ( %d ) en %s', 16, 1, @error_message, @error_number,  @error_proc )
	IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
END CATCH
--endregion

GO

